version: '3.8'

volumes:
  asterion_local_postgres_data: {}
  asterion_local_postgres_data_backups: {}
  asterion_local_redis_data: {}

services:

  front:
    build:
      context: ./LMS_FRONT
      dockerfile: ./Dockerfile
    container_name: sase-front
    ports:
      - "3000:3000"
    volumes:
      - ./LMS_FRONT:/app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOSTNAME=0.0.0.0
    depends_on:
      - fastapi-app
    networks:
      - sase_network

  fastapi-app:
    build:
      context: ./GLOBAL-AUTH
      dockerfile: Dockerfile
    container_name: global-auth-api
    ports:
      - "8001:80"
    volumes:
      - ./GLOBAL-AUTH/app:/code/app
    environment:
      - PYTHONPATH=/code
      - DATABASE_URL=postgresql://debug:debug@postgres:5432/global_auth_db
      - TEST_DATABASE_URL=postgresql://debug:debug@postgres:5432/global_auth_test_db
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    # user provided command; change to uvicorn or a start script if needed
    command: ["fastapi", "dev", "app/main.py", "--host", "0.0.0.0", "--port", "80"]
    networks:
      - sase_network

  postgres:
    image: postgres:13
    container_name: asterion_local_postgres
    volumes:
      - asterion_local_postgres_data:/var/lib/postgresql/data
      - asterion_local_postgres_data_backups:/backups
    environment:
      - POSTGRES_USER=debug
      - POSTGRES_PASSWORD=debug
      - POSTGRES_DB=global_auth_db
    networks:
      - sase_network

  redis:
    image: docker.io/redis:6
    container_name: asterion_local_redis
    volumes:
      - asterion_local_redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - sase_network

networks:
  sase_network:
    driver: bridge

# Notes:
# - This compose integrates your requested services and maps them to the submodule
#   directories present in this repository:
#     - ./GLOBAL-AUTH (fastapi backend)
#     - ./LMS_FRONT  (frontend)
# - I omitted the Django/`back` build and related Celery/MinIO services because this
#   repository doesn't contain a `back/` folder. If you want those included, add the
#   `back/` code (and the referenced Dockerfiles) or tell me where to point them and
#   I'll add the services back in.
# - If your FastAPI project uses `uvicorn` (common) instead of the `fastapi` CLI,
#   change the `command` to something like:
#     command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]
# - Create any necessary env files inside the submodules (e.g. `GLOBAL-AUTH/.env.local`)
#   or replace the environment variables above with appropriate values.

# Start everything:
# docker compose up --build