version: '3.8'

volumes:
  asterion_local_postgres_data: {}
  asterion_local_postgres_data_backups: {}
  asterion_local_redis_data: {}
  lms_postgres_data: {}

services:

  front:
    build:
      context: ./LMS_FRONT
      dockerfile: ./Dockerfile
    container_name: LMS_FRONT
    ports:
      - "3000:3000"
    volumes:
      - ./LMS_FRONT:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./LMS_FRONT/.env
    depends_on:
      - fastapi-app
      - lms-back
    networks:
      - lms_network

  lms-back:
    build:
      context: ./LMS_BACK
      dockerfile: Dockerfile
    container_name: lms-back
    ports:
      - "8000:8000"
    volumes:
      - ./LMS_BACK:/app
    env_file:
      - ./LMS_BACK/.env
    restart: unless-stopped
    depends_on:
      - lms-postgres
      - fastapi-app
    networks:
      - lms_network

  fastapi-app:
    build:
      context: ./GLOBAL-AUTH
      dockerfile: Dockerfile
    container_name: fastapi-app
    ports:
      - "8001:80"
    volumes:
      - ./GLOBAL-AUTH/app:/code/app
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      - PYTHONPATH=/code
      - DATABASE_URL=postgresql://debug:debug@postgres:5432/global_auth_db
      - TEST_DATABASE_URL=postgresql://debug:debug@postgres:5432/global_auth_test_db
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    # user provided command; change to uvicorn or a start script if needed
    command: ["fastapi", "dev", "app/main.py", "--host", "0.0.0.0", "--port", "80"]
    networks:
      - lms_network

  postgres:
    image: postgres:13
    container_name: asterion_local_postgres
    volumes:
      - asterion_local_postgres_data:/var/lib/postgresql/data
      - asterion_local_postgres_data_backups:/backups
    environment:
      - POSTGRES_USER=debug
      - POSTGRES_PASSWORD=debug
      - POSTGRES_DB=global_auth_db
    networks:
      - lms_network

  lms-postgres:
    image: postgres:13
    container_name: lms_postgres
    volumes:
      - lms_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=debug
      - POSTGRES_PASSWORD=debug
      - POSTGRES_DB=lms_db
    ports:
      - "5433:5432"
    networks:
      - lms_network

  redis:
    image: docker.io/redis:6
    container_name: asterion_local_redis
    volumes:
      - asterion_local_redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - lms_network

networks:
  lms_network:
    driver: bridge
